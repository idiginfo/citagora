package org.idiginfo.docsvc.model.vocabulary;
 
import com.hp.hpl.jena.rdf.model.Model;
import com.hp.hpl.jena.rdf.model.ModelFactory;
import com.hp.hpl.jena.rdf.model.Property;
import com.hp.hpl.jena.rdf.model.Resource;

 
/**
 * Vocabulary definitions from http://www.openannotation.org/spec/core/core-schema.xml 
 * @author Auto-generated by schemagen on 06 Sep 2012 
 */
public class OAF {
    /** 
     * <p>The RDF model that holds the vocabulary terms</p>
     *  
     */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    /** 
     * <p>The namespace of the vocabulary as a string</p> 
     */
    public static final String NS = "http://www.w3.org/ns/openannotation/core/";
    
    /** 
     * <p>The namespace of the vocabulary as a string</p>
     *  @see #NS 
     */
    public static String getURI() {return NS;}
    
    /** 
     * <p>The namespace of the vocabulary as a resource</p> 
     */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    /** 
     * <p>The ontology's owl:versionInfo as a string</p> 
     */
    public static final String VERSION_INFO = "core/20120509";
    
    /** 
     * <p>The time at which the oa:annotator created the Annotation.</p> 
     */
    public static final Property annotated = m_model.createProperty( "http://www.w3.org/ns/openannotation/core/annotated" );
    
    /** 
     * <p>The object of the relationship is a resource that identifies the agent responsible 
     *  for asserting the triples in the Annotation graph. This may be either a human 
     *  or software agent.</p>
     */
    public static final Property annotator = m_model.createProperty( "http://www.w3.org/ns/openannotation/core/annotator" );
    
    /** 
     * <p>A link to a copy of the Source resource's representation, appropriate for 
     *  the Annotation.</p>
     */
    public static final Property cachedSource = m_model.createProperty( "http://www.w3.org/ns/openannotation/core/cachedSource" );
    
    /** 
     * <p>The subject and object resources of the oa:equivalent relationship represent 
     *  the same resource, but potentially have different metadata such as generator, 
     *  generated and serialization format. oa:equivalent is a symmetrical relationship; 
     *  if A oa:equivalent B, then it is also true that B oa:equivalent A.</p>
     */
    public static final Property equivalent = m_model.createProperty( "http://www.w3.org/ns/openannotation/core/equivalent" );
    
    /** 
     * <p>The time at which the agent referenced by oa:generator generated the first 
     *  serialization of the Annotation graph, and any subsequent substantially different 
     *  one. The graph MUST have changed for this property to be updated, and as such 
     *  represents the last modified datestamp for the graph. This might be used to 
     *  determine if the graph should be re-imported into a triplestore when discovered.</p>
     */
    public static final Property generated = m_model.createProperty( "http://www.w3.org/ns/openannotation/core/generated" );
    
    /** 
     * <p>The object of the relationship is the agent, likely software, responsible 
     *  for generating the serialization of the Annotation's graph.</p>
     */
    public static final Property generator = m_model.createProperty( "http://www.w3.org/ns/openannotation/core/generator" );
    
    /** 
     * <p>The relationship between Annotation and Body</p> 
     */
    public static final Property hasBody = m_model.createProperty( "http://www.w3.org/ns/openannotation/core/hasBody" );
    
    /** 
     * <p>The relationship between a oa:SpecificResource and a oa:Selector.</p> 
     */
    public static final Property hasSelector = m_model.createProperty( "http://www.w3.org/ns/openannotation/core/hasSelector" );
    
    /** 
     * <p>The relationship between a oa:SpecificResource and the resource that it is 
     *  a more specific representation of.</p>
     */
    public static final Property hasSource = m_model.createProperty( "http://www.w3.org/ns/openannotation/core/hasSource" );
    
    /** 
     * <p>The relationship between a oa:SpecificResource and a oa:State resource</p> 
     */
    public static final Property hasState = m_model.createProperty( "http://www.w3.org/ns/openannotation/core/hasState" );
    
    /** 
     * <p>The relationship between a oa:SpecificResource and a oa:Style</p> 
     */
    public static final Property hasStyle = m_model.createProperty( "http://www.w3.org/ns/openannotation/core/hasStyle" );
    
    /** 
     * <p>The relationship between Annotation and Target</p> 
     */
    public static final Property hasTarget = m_model.createProperty( "http://www.w3.org/ns/openannotation/core/hasTarget" );
    
    /** 
     * <p>The version of the model that was used for the Annotation. The object of the 
     *  relationship is an RDF ontology describing the version of the Open Annotation 
     *  Core namespace used. The Open Annotation namespace itself does not change, 
     *  and hence this is not sufficient information to determine which version of 
     *  the model is being used.</p>
     */
    public static final Property modelVersion = m_model.createProperty( "http://www.w3.org/ns/openannotation/core/modelVersion" );
    
    /** 
     * <p>The timestamp at which the Source resource should be interpreted for the Annotation.</p> 
     */
    public static final Property when = m_model.createProperty( "http://www.w3.org/ns/openannotation/core/when" );
    
    /** 
     * <p>A document identified by an HTTP URI that describes, at least, the Body and 
     *  Target resources involved in the annotation.</p>
     */
    public static final Resource Annotation = m_model.createResource( "http://www.w3.org/ns/openannotation/core/Annotation" );
    
    /** 
     * <p>A resource which describes the segment of interest in a representation, through 
     *  the use of the fragment identifier component of a URI.</p>
     */
    public static final Resource FragmentSelector = m_model.createResource( "http://www.w3.org/ns/openannotation/core/FragmentSelector" );
    
    /** 
     * <p>A resource which describes the segment of interest in a representation of 
     *  a Source resource</p>
     */
    public static final Resource Selector = m_model.createResource( "http://www.w3.org/ns/openannotation/core/Selector" );
    
    /** 
     * <p>A resource which identifies part of another resource, a particular representation 
     *  of a resource, a resource with styling hints for renders, or any combination 
     *  of these.</p>
     */
    public static final Resource SpecificResource = m_model.createResource( "http://www.w3.org/ns/openannotation/core/SpecificResource" );
    
    /** 
     * <p>A resource which describes how to retrieve an appropriate representation of 
     *  the Source resource for the Annotation.</p>
     */
    public static final Resource State = m_model.createResource( "http://www.w3.org/ns/openannotation/core/State" );
    
    /** 
     * <p>A resource which describes the style in which the selection or resource should 
     *  be rendered.</p>
     */
    public static final Resource Style = m_model.createResource( "http://www.w3.org/ns/openannotation/core/Style" );
    
}
