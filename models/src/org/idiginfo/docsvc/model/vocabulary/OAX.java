package org.idiginfo.docsvc.model.vocabulary;
 
import com.hp.hpl.jena.rdf.model.Model;
import com.hp.hpl.jena.rdf.model.ModelFactory;
import com.hp.hpl.jena.rdf.model.Property;
import com.hp.hpl.jena.rdf.model.Resource;
 
/**
 * Vocabulary definitions from http://www.openannotation.org/spec/extension/extension-schema.xm 
 * @author Auto-generated by schemagen on 01 Oct 2012
 */
public class OAX {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://www.w3.org/ns/openannotation/extension/";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    /** <p>The ontology's owl:versionInfo as a string</p> */
    public static final String VERSION_INFO = "core/20120509";
    
    /** <p>A copy of the text which is being selected, after normalization.</p> */
    public static final Property exact = m_model.createProperty( "http://www.w3.org/ns/openannotation/extension/exact" );
    
    /** <p>The relationship between an Annotation and the Tagging Resource.</p> */
    public static final Property hasSemanticTag = m_model.createProperty( "http://www.w3.org/ns/openannotation/extension/hasSemanticTag" );
    
    /** <p>The starting position of the segment of text. The first character in the full 
     *  text is character position 0.</p>
     */
    public static final Property offset = m_model.createProperty( "http://www.w3.org/ns/openannotation/extension/offset" );
    
    /** <p>A snippet of text that occurs immediately after the text which is being selected.</p> */
    public static final Property prefix = m_model.createProperty( "http://www.w3.org/ns/openannotation/extension/prefix" );
    
    /** <p>The length of the segment of text selected. The last character is thus included 
     *  within the segment.</p>
     */
    public static final Property range = m_model.createProperty( "http://www.w3.org/ns/openannotation/extension/range" );
    
    /** <p>The class for an Annotation that represents a bookmark to the target resources 
     *  or recorded point or points within one or more resources. Bookmarks may or 
     *  may not have a Body resource</p>
     */
    public static final Resource Bookmark = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/Bookmark" );
    
    /** <p>The class for an Annotation that represents a request for a modification or 
     *  edit to the target resource</p>
     */
    public static final Resource Change = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/Change" );
    
    /** <p>The class for an Annotation that represents the assignment of a classification 
     *  type, typically from a controlled vocabulary, to the target resource(s)</p>
     */
    public static final Resource Classification = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/Classification" );
    
    /** <p>The class for an Annotation that represents a commentary about or review of 
     *  the target resource(s)</p>
     */
    public static final Resource Comment = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/Comment" );
    
    /** <p>The class for a Selector which encapsulates more than one other Selector which 
     *  must be processed</p>
     */
    public static final Resource CompositeSelector = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/CompositeSelector" );
    
    /** <p>The class for a State which encapsulates more than one other State which must 
     *  be processed</p>
     */
    public static final Resource CompositeState = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/CompositeState" );
    
    /** <p>The class for a Style which encapsulates more than one other Style which must 
     *  be processed</p>
     */
    public static final Resource CompositeStyle = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/CompositeStyle" );
    
    /** <p>The class for representing CSS styling information for Specific Resources</p> */
    public static final Resource CssValueStyle = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/CssValueStyle" );
    
    /** <p>The class for an Annotation that represents a description of the target resource(s), 
     *  as opposed to a Comment about them</p>
     */
    public static final Resource Description = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/Description" );
    
    /** <p>The class for an Annotation that represents a highlighted section of the target 
     *  resource or segment. A Highlight may or may not have a Body, and is likely 
     *  to have both a Selector and a Style</p>
     */
    public static final Resource Highlight = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/Highlight" );
    
    /** <p>The class for an Annotation that represents a link (of unspecified semantics) 
     *  between the body and target resources</p>
     */
    public static final Resource Link = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/Link" );
    
    /** <p>The class for an Annotation that represents an assignment of value or quality 
     *  to the target resource(s)</p>
     */
    public static final Resource Moderation = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/Moderation" );
    
    /** <p>The class for an Annotation that represents a question about the target resource(s)</p> */
    public static final Resource Question = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/Question" );
    
    /** <p>The class for an Annotation that represents a reference for the target resource 
     *  or segment</p>
     */
    public static final Resource Reference = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/Reference" );
    
    /** <p>The class for an Annotation that represents a reply to a previous statement, 
     *  either an Annotation or another resource</p>
     */
    public static final Resource Reply = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/Reply" );
    
    /** <p>The class for a Selector which defines a shape using the SVG standard</p> */
    public static final Resource SvgSelector = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/SvgSelector" );
    
    /** <p>The class for an Annotation that represents a Tag on the target resource(s). 
     *  The tagging resource may be of any type or format</p>
     */
    public static final Resource Tag = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/Tag" );
    
    /** <p>The class for a Selector which describes a range of text based on its starting 
     *  position (oax:offset) and length (oax:range).</p>
     */
    public static final Resource TextOffsetSelector = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/TextOffsetSelector" );
    
    /** <p>The class for a Selector that describes a textual segment by means of quoting 
     *  it, plus passages before or after it.</p>
     */
    public static final Resource TextQuoteSelector = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/TextQuoteSelector" );
    
    /** <p>The class for representing an XSLT Stylesheet to be applied to an XML representation 
     *  of a resource</p>
     */
    public static final Resource XsltStyle = m_model.createResource( "http://www.w3.org/ns/openannotation/extension/XsltStyle" );
    
}
