
package com.thomsonreuters.wokmws.cxf.auth;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.0
 * 2012-10-29T11:32:07.027-04:00
 * Generated source version: 2.7.0
 * 
 */
public final class WOKMWSAuthenticate_WOKMWSAuthenticatePort_Client {

    private static final QName SERVICE_NAME = new QName("http://auth.cxf.wokmws.thomsonreuters.com", "WOKMWSAuthenticateService");

    private WOKMWSAuthenticate_WOKMWSAuthenticatePort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = WOKMWSAuthenticateService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        WOKMWSAuthenticateService ss = new WOKMWSAuthenticateService(wsdlURL, SERVICE_NAME);
        WOKMWSAuthenticate port = ss.getWOKMWSAuthenticatePort();  
        
        {
        System.out.println("Invoking closeSession...");
        try {
            port.closeSession();

        } catch (SessionException_Exception e) { 
            System.out.println("Expected exception: SessionException has occurred.");
            System.out.println(e.toString());
        } catch (QueryException_Exception e) { 
            System.out.println("Expected exception: QueryException has occurred.");
            System.out.println(e.toString());
        } catch (AuthenticationException_Exception e) { 
            System.out.println("Expected exception: AuthenticationException has occurred.");
            System.out.println(e.toString());
        } catch (ESTIWSException_Exception e) { 
            System.out.println("Expected exception: ESTIWSException has occurred.");
            System.out.println(e.toString());
        } catch (InternalServerException_Exception e) { 
            System.out.println("Expected exception: InternalServerException has occurred.");
            System.out.println(e.toString());
        } catch (InvalidInputException_Exception e) { 
            System.out.println("Expected exception: InvalidInputException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking roamingAuthenticate...");
        java.lang.String _roamingAuthenticate_username = "_roamingAuthenticate_username112114252";
        java.lang.String _roamingAuthenticate_password = "_roamingAuthenticate_password-1194435645";
        try {
            java.lang.String _roamingAuthenticate__return = port.roamingAuthenticate(_roamingAuthenticate_username, _roamingAuthenticate_password);
            System.out.println("roamingAuthenticate.result=" + _roamingAuthenticate__return);

        } catch (SessionException_Exception e) { 
            System.out.println("Expected exception: SessionException has occurred.");
            System.out.println(e.toString());
        } catch (AuthenticationException_Exception e) { 
            System.out.println("Expected exception: AuthenticationException has occurred.");
            System.out.println(e.toString());
        } catch (ESTIWSException_Exception e) { 
            System.out.println("Expected exception: ESTIWSException has occurred.");
            System.out.println(e.toString());
        } catch (InternalServerException_Exception e) { 
            System.out.println("Expected exception: InternalServerException has occurred.");
            System.out.println(e.toString());
        } catch (InvalidInputException_Exception e) { 
            System.out.println("Expected exception: InvalidInputException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking authenticate...");
        try {
            java.lang.String _authenticate__return = port.authenticate();
            System.out.println("authenticate.result=" + _authenticate__return);

        } catch (SessionException_Exception e) { 
            System.out.println("Expected exception: SessionException has occurred.");
            System.out.println(e.toString());
        } catch (QueryException_Exception e) { 
            System.out.println("Expected exception: QueryException has occurred.");
            System.out.println(e.toString());
        } catch (AuthenticationException_Exception e) { 
            System.out.println("Expected exception: AuthenticationException has occurred.");
            System.out.println(e.toString());
        } catch (ESTIWSException_Exception e) { 
            System.out.println("Expected exception: ESTIWSException has occurred.");
            System.out.println(e.toString());
        } catch (InternalServerException_Exception e) { 
            System.out.println("Expected exception: InternalServerException has occurred.");
            System.out.println(e.toString());
        } catch (InvalidInputException_Exception e) { 
            System.out.println("Expected exception: InvalidInputException has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
